{"version":3,"sources":["components/home/styles.js","components/home/HomeNav.jsx","components/home/HomeDrawer.jsx","services/firebase.js","services/auth.js","components/profile/Profile.jsx","services/clients.js","components/sales/saleOportunity/FormDialog.jsx","services/leadsDB.js","components/sales/saleOportunity/FileUpload.jsx","services/quotations.js","components/snackbar/Snack.jsx","components/sales/saleOportunity/LeadDrawer.jsx","components/sales/saleOportunity/LeadsTable.jsx","components/sales/saleOportunity/SalesOp.jsx","components/sales/clients/ClientDialog.jsx","components/sales/clients/ClientTable.jsx","components/sales/clients/Clients.jsx","components/sales/TabContent.jsx","components/sales/Sales.jsx","components/dashboard/LeadsTable.jsx","components/charts/DashboardPieChart.jsx","components/dashboard/Summary.jsx","services/generalConsults.js","components/dashboard/Employees.jsx","components/dashboard/Dashboard.jsx","components/home/Home.jsx","components/navbar/Navbar.jsx","components/login/Login.jsx","components/signup/Signup.jsx","Routes.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","concat","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","unit","toolbar","Object","objectSpread","alignItems","justifyContent","padding","mixins","content","flexGrow","bigAvatar","margin","height","salesMenuRoot","backgroundColor","palette","background","paper","textAlign","container","flexWrap","withStyles","withTheme","_ref","classes","open","handleDrawerOpen","photoURL","role","toHome","handleLocation","closeSession","_useState","useState","_useState2","slicedToArray","openMenu","setOpenMenu","closeMenu","react_default","a","createElement","index_es","position","className","classNames","defineProperty","disableGutters","color","aria-label","onClick","Menu_default","style","cursor","src","alt","e","currentTarget","clickable","avatar","label","anchorEl","Boolean","onClose","icons_index_es","_classNames","_classNames2","direction","handleDrawerClose","location","variant","component","selected","button","title","placement","primary","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","url","signup","user","axios","post","then","res","data","catch","err","response","login","withCredentials","logout","get","actUser","id","Profile","state","message","String","progress","componentDidMount","JSON","parse","localStorage","getItem","_this","props","history","push","setState","handleChange","target","name","value","email","uploadPhoto","file","files","task","storage","ref","_id","child","put","on","snap","bytesTransferred","totalBytes","Math","floor","getDownloadURL","link","setItem","stringify","updateUser","clickInput","document","getElementById","click","removeItem","close","_this$state","this","backgroundImage","InputLabelProps","shrink","disabled","onChange","type","accept","Component","withRouter","updateClient","newClient","allClients","delClient","FormDialog","dialog","closeDialog","lead","clearLead","submitLead","updateLead","dialogNew","closeDrawer","bussinesses","setBussinesses","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","clients","sort","b","bussinessName","localeCompare","sent","stop","apply","arguments","fetchData","aria-labelledby","prefix","seller","number","clientName","autoComplete","required","inputProps","length","filter","buss","active","map","bussiness","k","key","defaultValue","contactName","onBlur","contactPosition","contactPhone","contactEmail","commentText","getAll","userId","userLeads","newLead","leads","removeLead","leadID","inactiveLead","removeUserLead","userID","newUser","actLead","updatedLead","FileUpload","updateLeadState","file0","setFile0","_useState3","_useState4","file1","setFile1","_useState5","_useState6","loading","setloading","_useState7","_useState8","open0","setOpen0","_useState9","_useState10","open1","setOpen1","toggleDialog0","toggleDialog1","handleFile","deleteFirstFile","deleteFile0","deleteSecondFile","deleteFile1","fileURL0","rel","href","file0Name","file0Upload","fileURL1","file1Name","file1Upload","autoFocus","Snack","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","require","LeadDrawer","deleteLead","quotations","getQuotations","handleDateChange","openDialog","setOpen","toggleDialog","openQuot","setOpenQuot","toggleQuotation","editQuot","setEditQuot","toggleEditQuotation","quot","setQuotation","quotation","handleQuotation","submitQuotation","newQuot","openSnack","delQuotation","delQuot","updateQuotation","actQuot","snackbar","setSnackbar","_useState11","_useState12","setMessage","Fragment","anchor","status","bussinessAddress","bussinessRole","industry","origin","bussinessEmployees","maxWidth","scope","quotPrefix","moment","createdAt","format","quotPO","quotBill","quotDescription","quotAmount","react_currency_formatter_umd_default","quantity","fontSize","saleOportunity_FileUpload","saleOportunity_FormDialog","fullWidth","marginTop","htmlFor","startAdornment","snackbar_Snack","LeadsTable","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage","openDrawer","arrayFilter","setArrayFilter","setQuotations","getQuot","item","includes","toUpperCase","toLowerCase","size","material_ui_pickers_esm","utils","DateFnsUtils","locale","esLocale","views","justify","okLabel","cancelLabel","meetingDate","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","saleOportunity_LeadDrawer","SalesOp","saleOportunity_LeadsTable","ClientDialog","_ref$client","client","submitClient","deleteClient","deleteDialog","setDeleteDialog","toggleDeleteDialog","ClientTable","_ref$clients","clients_ClientDialog","Clients","getClients","componentWillUnmount","reverse","console","log","upClient","event","clients_ClientTable","TabContent","handleClose","getLeads","saleOportunity_SalesOp","Clients_Clients","Sales","undefined","date","updateQuot","_this$state$leads","userUpdated","keys","handleTabs","_this$state2","indicatorColor","textColor","sales_TabContent","orderById","disableFocusListener","fromNow","ReactChartkick","addAdapter","Chart","DashboardPieChart","propuesta","negociacion","confirmacion","perdida","ganada","react_chartkick_esm","messages","empty","Summary","summaryData","dashboard_LeadsTable","charts_DashboardPieChart","getSellers","Employees","sellers","secondary","reduce","acc","Dashboard","getEmployees","getSummaryData","dashboard_Summary","dashboard_Employees","Home","home_HomeNav","assign","home_HomeDrawer","Dashboard_Dashboard","sales_Sales","profile_Profile","Navbar","AppBar_default","Toolbar_default","Link","to","Button_default","Login","showPassword","isAuth","handleSubmit","togglePassword","navbar_Navbar","password","InputProps","endAdornment","Signup","error","errorPass","disabledMail","disabledPass","checkPassword","input","checkEmail","test","Routes","Switch","Route","exact","path","createMuiTheme","typography","useNextVariants","main","App","core_styles","src_Routes","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3009913d.chunk.js","sourcesContent":["const drawerWidth = 240;\n\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing.unit * 7 + 1\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    marginLeft: '57px'\n  },\n  bigAvatar: {\n    margin: 10,\n    width: 60,\n    height: 60,\n  },\n  flexGrow:{\n    flexGrow: 1\n  },\n  salesMenuRoot:{\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    textAlign: 'left'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  }\n})","import React, {useState} from 'react'\nimport { AppBar, Toolbar, IconButton, Avatar, Chip, Menu, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { styles } from './styles'\nimport './styles.css'\nimport { AccountCircle, ExitToApp } from '@material-ui/icons';\n\nconst HomeNav = ({classes,open, handleDrawerOpen, photoURL, role, toHome, handleLocation, closeSession}) => {\n    const [ openMenu, setOpenMenu ] = useState(null)\n\n    const toggleMenu = e => setOpenMenu(e.currentTarget)\n\n    const closeMenu = () => setOpenMenu(null)\n    \n  return (\n    <AppBar\n        position=\"fixed\"\n        className={classNames(classes.appBar, {\n        [classes.appBarShift]: open,\n        })}\n    >\n        <Toolbar className=\"navbar-distribution\" disableGutters={!open}>\n            <div className=\"left-items\">\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={handleDrawerOpen}\n                    className={classNames(classes.menuButton, {\n                    [classes.hide]: open,\n                    })}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <img onClick={toHome} style={{width:\"100px\", cursor:\"pointer\"}} src=\"/logo.png\" alt=\"fss-logo\"/>\n            </div>\n            <div onClick={toggleMenu} className=\"profile-circled\">\n                <Chip className=\"chip-color\"\n                    clickable\n                    avatar={<Avatar alt=\"profile-mini-pic\" \n                    src={photoURL}/>} \n                    label={role}/>\n            </div>\n        </Toolbar>\n        <Menu\n            anchorEl={openMenu}\n            open={Boolean(openMenu)}\n            onClose={closeMenu}\n        >\n            <MenuItem onClick={() => {closeMenu(); handleLocation('profile')}}>\n                <IconButton>\n                    <AccountCircle/>\n                </IconButton>\n                Perfil\n            </MenuItem>\n            <MenuItem onClick={() => {closeMenu(); closeSession()}}>\n                <IconButton>\n                    <ExitToApp/>\n                </IconButton>\n                Cerrar sesión\n            </MenuItem>\n        </Menu>\n    </AppBar>\n  )\n}\nHomeNav.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n  }\n\nexport default withStyles(styles, {withTheme: true})(HomeNav)","import React from 'react'\nimport { Drawer, IconButton, List, Divider, \n    ListItem, ListItemIcon, ListItemText, Tooltip } from '@material-ui/core';\nimport { Assignment, ChevronLeft, ChevronRight, Face, TrendingUp } from '@material-ui/icons';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { styles } from './styles'\n\n\nconst HomeDrawer = ({open, direction, handleDrawerClose, classes, location, handleLocation}) => {\n  return (\n    <Drawer\n        variant=\"permanent\"\n        className={classNames(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })}\n          classes={{\n            paper: classNames({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open\n            })\n          }}\n        open={open}\n    >\n        <div className={classes.toolbar}>\n            <IconButton onClick={handleDrawerClose}>\n                {direction === 'right' ? <ChevronRight /> : <ChevronLeft />}\n            </IconButton>\n        </div>\n        <Divider />\n        <List component=\"nav\">\n            <ListItem selected={location === 'root'} onClick={() => handleLocation('root')} button>\n                {open ? <ListItemIcon><TrendingUp /></ListItemIcon> : \n                <Tooltip title=\"Resumen\" placement=\"right-start\">\n                    <ListItemIcon><TrendingUp /></ListItemIcon>\n                </Tooltip>}\n                <ListItemText primary=\"Resumen\" />\n            </ListItem>\n            <ListItem selected={location === 'ventas'} onClick={() => handleLocation('ventas')} button>\n                {open ? <ListItemIcon><Assignment /></ListItemIcon> : \n                <Tooltip title=\"Ventas\" placement=\"right-start\">\n                    <ListItemIcon><Assignment /></ListItemIcon>\n                </Tooltip>}\n                <ListItemText primary=\"Ventas\" />\n            </ListItem>\n        </List>\n        <Divider />\n        <List component=\"nav\">\n            <ListItem selected={location === 'profile'} onClick={() => handleLocation('profile')} button>\n            {open ? <ListItemIcon><Face /></ListItemIcon> : \n                <Tooltip title=\"Perfil\" placement=\"right-start\">\n                    <ListItemIcon><Face /></ListItemIcon>\n                </Tooltip>}\n                <ListItemText primary=\"Perfil\" />\n            </ListItem>\n        </List>\n    </Drawer>\n  )\n}\n\nHomeDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n  }\n\nexport default withStyles(styles, {withTheme: true})(HomeDrawer)\n","import * as firebase from 'firebase'\n\nvar config = {\n    apiKey: \"AIzaSyDiJ--AaTzWP3NdW1j6Zo4wvB17x1Cr2nk\",\n    authDomain: \"fss-react.firebaseapp.com\",\n    databaseURL: \"https://fss-react.firebaseio.com\",\n    projectId: \"fss-react\",\n    storageBucket: \"fss-react.appspot.com\",\n    messagingSenderId: \"18829816109\"\n};\nfirebase.initializeApp(config)\n\nexport default firebase","import axios from 'axios'\n// const url = 'http://localhost:3000/auth'\nconst url = 'https://crm-fss.herokuapp.com/auth'\n\nexport const signup = user => \n    axios.post(`${url}/signup`, user, {})\n    .then(res => res.data)\n    .catch(err => err.response)\n\nexport const login = user => \n    axios.post(`${url}/login`, user, {withCredentials: true})\n    .then(res => res.data)\n    .catch(err => err.response)\n\nexport const logout = () => \n    axios.get(`${url}/logout`)\n    .then(res => res.data)\n    .catch(err => err.response)\n\nexport const actUser = (id,user) =>\n    axios.post(`${url}/updateUser/${id}`, user, {})\n    .then(res => res.data)\n    .catch(err => err.response)","import React, { Component } from 'react'\nimport { Paper, Snackbar, TextField, CircularProgress, Button } from '@material-ui/core';\nimport './styles.css'\nimport { CameraAlt, ExitToApp } from '@material-ui/icons';\nimport firebase from '../../services/firebase'\nimport { logout } from '../../services/auth'\nimport { withRouter } from 'react-router-dom'\n\nclass Profile extends Component{\n    state = {\n        open: false,\n        direction: 'left',\n        location: 'root',\n        user: {},\n        message: String,\n        progress:0\n    }\n\n    componentDidMount = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) return this.props.history.push('/login')\n        this.setState({user})\n    }\n\n    handleChange = e => {\n        const { user } = this.state\n        switch(e.target.id){\n            case 'name':\n                user.name = e.target.value\n                break\n            case 'email':\n                user.email = e.target.value\n                break\n            default:\n                return\n        }\n        this.setState({user})\n    }\n\n    uploadPhoto = (e) => {\n        const { user } = this.state\n        const file = e.target.files[0]\n        const task = firebase.storage().ref(`profilePics/${user.name}-${user._id}`).child(file.name).put(file)\n\n        task.on(\"state_changed\", snap => {\n            let progress = (snap.bytesTransferred / snap.totalBytes) * 100\n            progress = Math.floor(progress)\n            this.setState({ progress })\n        })\n\n        task\n        .then(snap=>snap.ref.getDownloadURL())\n        .then(link=>{\n            user['photoURL'] = link\n            localStorage.setItem('user', JSON.stringify(user))\n            this.props.updateUser(user)\n            this.setState({user, progress: 0, open: true, message: 'Foto de perfil actualizada'})\n        })\n\n    }\n\n    clickInput = () => {\n        document.getElementById('photoUpload').click()\n    }\n\n    closeSession = () => \n        logout()\n        .then(res => {\n            const { history } = this.props\n            localStorage.removeItem('user')\n            return history.push('/login')\n        })\n        .catch(err => err)\n\n    close = () => this.setState({open: false})\n\n    render() {\n        const { open, user, message, progress } = this.state\n        const { handleChange, close, uploadPhoto, clickInput, closeSession } = this\n        return (\n            <div>\n            <Paper className=\"paper-profile\">\n                <h2>Perfil de {user.name}</h2>\n                {!user.photoURL ? <CircularProgress/> : progress > 0 ? <CircularProgress variant=\"determinate\" value={progress} /> :\n                 <div onClick={clickInput} style={{backgroundImage:`url(${user.photoURL})`}} \n                 className=\"profile-picture\">\n                    <span>\n                        <CameraAlt/>\n                        <p>Editar</p>\n                    </span>\n                </div>}\n                <form>\n                    <div>\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        disabled\n                        id=\"email\"\n                        label=\"Email\"\n                        value={user.email}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                        InputLabelProps={{ shrink: true }}\n                        id=\"name\"\n                        label=\"Nombre\"\n                        value={user.name}\n                        onChange={handleChange}\n                        margin=\"normal\"\n                        />\n                    </div>\n                    <input onChange={uploadPhoto} type=\"file\" name=\"photoURL\" id=\"photoUpload\" style={{display:\"none\"}} accept=\"image/png, image/jpeg\"/>\n                </form>\n                <Button style={{margin:\"2rem 0\"}} onClick={closeSession} variant=\"contained\" color=\"secondary\">\n                    Cerrar sesión\n                    <ExitToApp style={{marginLeft:\"0.5rem\"}}/>\n                </Button> \n            </Paper>\n            <Snackbar open={open} message={message} close={close}/>\n          </div>\n        )\n      }\n}\n\nexport default withRouter(Profile)\n","import axios from 'axios'\n// const url = 'http://localhost:3000/clients'\nconst url = 'https://crm-fss.herokuapp.com/clients'\n\nexport const updateClient = data =>\n    axios.post(`${url}/updateClient/${data._id}`, data)\n        .then(res => res)\n        .catch(err => err)\n\nexport const newClient = data =>\n    axios.post(`${url}/newClient`, data)\n        .then(res => res)\n        .catch(err => err)\n\nexport const allClients = () => \n    axios.get(`${url}/allClients`)\n        .then(res => res)\n        .catch(err => err)\n\nexport const delClient = id => \n    axios.post(`${url}/deleteClient/${id}`)\n        .then(res => res)\n        .catch(err => err)","import React, {useState, useEffect} from 'react'\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport '../styles.css'\nimport { allClients } from '../../../services/clients'\n\nconst FormDialog = ({dialog, closeDialog, handleChange, lead, clearLead, \n    submitLead, updateLead, dialogNew, closeDrawer}) => {\n\n        const [bussinesses, setBussinesses] = useState([])\t\n        useEffect(() => {\t\n            const fetchData = async () => {\t\n                const result = await allClients()\t\n                    .then(clients => clients.data.sort((a, b) => a.bussinessName.localeCompare(b.bussinessName)))\t\n                    .catch(err => err)\t\n                setBussinesses(result)\t\n            }\t\n            fetchData()\t\n        }, [])\n\n  return (\n    <Dialog\n            open={dialogNew || dialog}\n            onClose={closeDialog}\n            aria-labelledby=\"new-form\"\n        >\n            <DialogTitle>{dialogNew ? 'Nuevo Deal' : `Editar deal ${lead.prefix}-${lead.seller}-${lead.number} de ${lead.clientName ? lead.clientName.bussinessName : ''}`}</DialogTitle>\n            <DialogContent>\n                {/* FORM */}\n                <form className=\"sales-oportunity-fields\" autoComplete=\"off\">\n                    <div>\n                        {dialogNew ?\n                        <FormControl className=\"text-field\">\t\n                            <InputLabel shrink>Cliente</InputLabel>\t\n                            <Select\t\n                                required\t\n                                onChange={handleChange}\t\n                                value={lead.clientName}\t\n                                inputProps={{\t\n                                name: 'clientName',\t\n                                id: 'clientName',\t\n                                }}\t\n                            >\t\n                            <MenuItem value=\"\" disabled>\t\n                                <em>Clientes</em>\t\n                            </MenuItem>\t\n                            {bussinesses.length ? \t\n                                bussinesses.filter(buss => buss.active === true).map((bussiness, k) => \t\n                                    <MenuItem \t\n                                        key={k} \t\n                                        value={bussiness._id}>\t\n                                        {bussiness.bussinessName}</MenuItem>) :\t\n                                        <MenuItem>No hay clientes</MenuItem>}\t\n                            </Select> \t\n                        </FormControl>\n                            : \t\n                           ''}\t\n\n                        <TextField\n                            required\n                            className=\"text-field\"\n                            id=\"contactName\"\n                            name=\"contactName\"\n                            label=\"Nombre del contacto\"\n                            defaultValue={lead.contactName}\n                            onBlur={handleChange}\n                        />\n                \n                        <TextField\n                            required\n                            className=\"text-field\"\n                            id=\"contactPosition\"\n                            name=\"contactPosition\"\n                            label=\"Puesto del contacto\"\n                            defaultValue={lead.contactPosition}\n                            onBlur={handleChange}\n                        />\n                    \n                        <TextField  \n                            required\n                            className=\"text-field\"\n                            id=\"contactPhone\"\n                            name=\"contactPhone\"\n                            label=\"Teléfono\"\n                            defaultValue={lead.contactPhone}\n                            onBlur={handleChange}\n                        />\n                    \n                        <TextField\n                            required\n                            className=\"text-field\"\n                            type=\"email\"\n                            id=\"contactEmail\"\n                            name=\"contactEmail\"\n                            label=\"Email\"\n                            defaultValue={lead.contactEmail}\n                            onBlur={handleChange}\n                        />\n\n                        <TextField\n                            className=\"text-field\"\n                            type=\"text\"\n                            id=\"commentText\"\n                            name=\"commentText\"\n                            label=\"Comentarios\"\n                            defaultValue={lead.commentText}\n                            onBlur={handleChange}\n                        />\n\n                    </div>\n                </form>\n            </DialogContent>\n           \n            {dialogNew ? \n                <DialogActions>\n                <Button onClick={closeDialog} >Cancelar</Button>\n                <Button onClick={clearLead} variant=\"outlined\" >Limpiar</Button>\n                <Button disabled={!lead.clientName ? true : false} onClick={submitLead} color=\"primary\" variant=\"contained\">\n                    Agregar\n                </Button> \n            </DialogActions>: \n            <DialogActions>\n                <Button onClick={() => {closeDialog(); closeDrawer()}} >Cancelar</Button>\n                <Button onClick={() => { updateLead(lead._id)}} color=\"primary\" variant=\"contained\">\n                    Actualizar\n                </Button> \n            </DialogActions>}\n                \n            \n        </Dialog>\n  )\n}\n\nexport default FormDialog\n","import axios from 'axios'\n// const url = 'http://localhost:3000/leads'\nconst url = 'https://crm-fss.herokuapp.com/leads'\n\nexport const getAll = userId => \n    axios.get(`${url}/getAll/${userId}`)\n        .then( userLeads => userLeads)\n        .catch( err => err.response)\n\nexport const newLead = (userId, lead) => \n    axios.post(`${url}/newLead/${userId}`, lead, {})\n        .then( leads => leads)\n        .catch( err => err.response)\n\nexport const removeLead = leadID => {\n    const { id } = leadID\n    return axios.post(`${url}/removeLead/${id}`)\n        .then(inactiveLead => inactiveLead)\n        .catch(err => err.response)\n}\n\nexport const removeUserLead = (userID, leadID) => \n    axios.post(`${url}/removeUserLead/${userID}`, leadID)\n        .then(newUser => newUser)\n        .catch(err => err.response)\n\nexport const actLead = (id, lead) => \n    axios.post(`${url}/updateLead/${id}`, lead)\n        .then(updatedLead => updatedLead)\n        .catch(err => err.response)\n\n// Manejo de archivos\n\nexport const file0Upload = (link, id, name) => {\n    const data = {link, name}\n    return axios.post(`${url}/file0Upload/${id}`, data)\n        .then(updatedLead => updatedLead)\n        .catch(err => err.response)\n}\n\nexport const file1Upload = (link, id, name) => {\n    const data = {link,name}\n    return axios.post(`${url}/file1Upload/${id}`, data)\n        .then(updatedLead => updatedLead)\n        .catch(err => err.response)\n}\n\nexport const deleteFile0 = id => \n    axios.get(`${url}/deleteFile0/${id}`)\n        .then(updatedLead => updatedLead)\n        .catch(err => err.response)\n\nexport const deleteFile1 = id => \n    axios.get(`${url}/deleteFile1/${id}`)\n        .then(updatedLead => updatedLead)\n        .catch(err => err.response)","import React, {useState} from 'react'\nimport '../styles.css'\nimport firebase from '../../../services/firebase'\nimport { IconButton, Dialog, DialogTitle, DialogActions, Button, LinearProgress } from '@material-ui/core'\nimport { file0Upload, file1Upload, deleteFile0, deleteFile1 } from '../../../services/leadsDB'\nimport { Delete } from '@material-ui/icons';  \n\nconst FileUpload = ({lead, updateLeadState}) => {\n    \n    const [file0,setFile0] = useState(null)\n    const [file1,setFile1] = useState(null)\n    const [loading,setloading] = useState(false)\n    const [ open0, setOpen0] = useState(false)\n    const [ open1, setOpen1] = useState(false)\n\n    let toggleDialog0 = () => setOpen0(!open0)\n    let toggleDialog1 = () => setOpen1(!open1)\n    \n    let handleFile = e => \n        e.target.name === 'file0' ? setFile0(e.target.files[0]) : setFile1(e.target.files[0])\n    \n    let deleteFirstFile = id => {\n        deleteFile0(id)\n        .then(res => updateLeadState(res.data))\n        .catch(err => err)\n    }\n\n    let deleteSecondFile = id => {\n        deleteFile1(id)\n        .then(res => updateLeadState(res.data))\n        .catch(err => err)\n    }\n\n    let file0Submit = () => {\n        if(file0 === null) return\n        let task\n            task = firebase.storage()\n            .ref(`documents/${lead.prefix}-${lead.seller}-${lead.number}/firstFile`)\n            .child(file0.name)\n            .put(file0)\n\n        task.on(\"state_changed\", snap => {\n            setloading(true)\n        })\n\n        task\n        .then(snap=>snap.ref.getDownloadURL())\n        .then(link=>{\n                let link0 = {link}\n                file0Upload(link0, lead._id, file0.name)\n                .then(res =>{\n                    updateLeadState(res.data)\n                    setloading(false)\n                })\n                .catch(err => err)\n            })\n    }\n\n    let file1Submit = () => {\n        if(file1 === null) return\n        let task\n            task = firebase.storage()\n            .ref(`documents/${lead.prefix}-${lead.seller}-${lead.number}/secondFile`)\n            .child(file1.name)\n            .put(file1)\n\n        task.on(\"state_changed\", snap => {\n            setloading(true)\n        })\n\n        task\n        .then(snap=>snap.ref.getDownloadURL())\n        .then(link=>{\n                let link1 = {link}\n                file1Upload(link1, lead._id, file1.name)\n                .then(res => {\n                    updateLeadState(res.data)\n                    setloading(false)\n                })\n                .catch(err => err)\n            })\n    }\n  return (\n    <div className=\"general-container\">\n        <div className=\"file-layout\">\n            <div className=\"file-input\">\n                <p className=\"small-font\">Primer archivo</p>\n                {lead.fileURL0 ? \n                <div>\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={lead.fileURL0} \n                        className=\"success-upload\"\n                    >\n                        {lead.file0Name}\n                    </a>\n                    <IconButton onClick={toggleDialog0} aria-label=\"Delete\">\n                        <Delete />\n                    </IconButton>\n                </div>: \n                <div className=\"input\">\n                    <input onChange={handleFile} type=\"file\" name=\"file0\" id=\"first\"/>\n                    <button id=\"file0\" onClick={file0Submit}>Subir</button>\n                </div>}\n            </div>\n            <div className=\"file-input\">\n                <p className=\"small-font\">Segundo archivo</p>\n                {lead.fileURL1 ? \n                <div>\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={lead.fileURL1} \n                        className=\"success-upload\"\n                    >\n                        {lead.file1Name}\n                    </a>\n                    <IconButton onClick={toggleDialog1} aria-label=\"Delete\">\n                        <Delete />\n                    </IconButton>\n                </div>: \n                <div className=\"input\">\n                    <input onChange={handleFile} type=\"file\" name=\"file1\" id=\"first\"/>\n                    <button id=\"file1\" onClick={file1Submit}>Subir</button>\n                </div>}\n            </div>\n        </div>\n        <div className=\"progress\">\n            {loading ? <LinearProgress/> : ''}\n        </div>\n        <Dialog\n            open={open0}\n            onClose={toggleDialog0}\n        >\n            <DialogTitle>\n                ¿Deseas eliminar \"Primer archivo\"?\n            </DialogTitle>\n            <DialogActions>\n                <Button onClick={toggleDialog0} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={() => {deleteFirstFile(lead._id); toggleDialog0();}} color=\"secondary\" autoFocus>\n                    Eliminar\n                </Button>\n            </DialogActions>\n        </Dialog>\n        <Dialog\n            open={open1}\n            onClose={toggleDialog1}\n        >\n            <DialogTitle>\n                ¿Deseas eliminar \"Segundo archivo\"?\n            </DialogTitle>\n            <DialogActions>\n                <Button onClick={toggleDialog1} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={() => {deleteSecondFile(lead._id); toggleDialog1();}} color=\"secondary\" autoFocus>\n                    Eliminar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </div>\n  )\n}\n\nexport default FileUpload\n","import axios from 'axios'\n\n// const url = 'http://localhost:3000/quotations'\nconst url = 'https://crm-fss.herokuapp.com/quotations'\n\n\nexport const getQuot = id =>\n    axios.get(`${url}/getQuotations/${id}`)\n        .then(res => res)\n        .catch(err => err)\n\nexport const newQuot = (id, data) => \n    axios.post(`${url}/submitQuotation/${id}`, data)\n        .then(res => res)\n        .catch(err => err)\n\nexport const actQuot = (id,quot) => \n    axios.post(`${url}/updateQuot/${id}`, quot)\n        .then(res => res)\n        .catch(err => err)\n\nexport const delQuot = id => \n    axios.post(`${url}/delQuot/${id}`)\n        .then(res => res)\n        .catch(err => err)","import React from 'react'\nimport { Snackbar, IconButton } from '@material-ui/core'\nimport { Close } from '@material-ui/icons'\n\nconst Snack = ({open, message, close}) => {\n    \n  return (\n    <Snackbar \n        color=\"secondary\"\n        anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={close}\n        ContentProps={{\n        'aria-describedby': 'message-id',\n        }}\n        message={<span id=\"message-id\">{message}</span>}\n        action={[\n        <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={close}\n        >\n            <Close />\n        </IconButton>\n        ]}\n    />\n  )\n}\n\nexport default Snack","import React, { useState } from 'react'\nimport { Drawer, Divider, Button, Dialog, DialogTitle, DialogActions, FormControl, MenuItem, Select, DialogContent, TextField, InputLabel, Input, InputAdornment, Table, Paper, TableHead, TableRow, TableCell, TableBody, IconButton, Tooltip } from '@material-ui/core';\n\nimport '../styles.css'\nimport FormDialog from './FormDialog';\nimport FileUpload from './FileUpload';\nimport { newQuot, delQuot, actQuot } from '../../../services/quotations'\nimport Snack from '../../snackbar/Snack';\n// Librerías para mostrar fecha y cantidades de dinero\nimport Currency from 'react-currency-formatter';\nimport moment from 'moment'\nimport { Delete, Edit } from '@material-ui/icons';\nrequire('moment/locale/es')\n\nconst LeadDrawer = ({drawer, closeDrawer, leads,lead, deleteLead, handleChange, quotations, getQuotations,\n    handleDateChange, loading, updateLead, dialog, closeDialog, openDialog, updateLeadState}) => {\n    // Diálogo para confirmar eliminación de deal\n    const [ open, setOpen] = useState(false)\n    let toggleDialog = () => setOpen(!open)\n\n    // Diálogo para crear nuevas cotizaciones\n    const [ openQuot, setOpenQuot ] = useState(false)\n    let toggleQuotation = () => setOpenQuot(!openQuot)\n    \n    // Diálogo para editar cotizaciones\n    const [ editQuot, setEditQuot ] = useState(false)\n    let toggleEditQuotation = quot => {\n        if(editQuot) return setEditQuot(!editQuot)\n        setEditQuot(!editQuot)\n        setQuotation(quot);\n    }\n\n    // Manejo de cotiaciones\n    const [ quotation, setQuotation ] = useState({})\n    let handleQuotation = e => {\n        quotation[e.target.name] = e.target.value\n        setQuotation(quotation)\n    }\n\n    let submitQuotation = id => \n        newQuot(id,quotation)\n        .then(res => {\n            openSnack('Cotización creada')\n            getQuotations(id)\n        })  \n        .catch(err => err)\n\n    let delQuotation = (id, leadID) => \n        delQuot(id)\n            .then(res => {\n                openSnack('Cotización eliminada')\n                getQuotations(leadID)\n            })  \n            .catch(err => err)\n\n    let updateQuotation = (id, data, leadID) => \n        actQuot(id,data)\n            .then(res => {\n                openSnack('Cotización actualizada')\n                getQuotations(leadID)\n            })  \n            .catch(err => err)\n\n    // Snackbar con mensaje de confirmación de acciones\n    const [snackbar, setSnackbar ] = useState(false)\n    const [message, setMessage ] = useState('')\n    let openSnack = message => {\n        setMessage(message)\n        setSnackbar(true)\n    }\n    let closeSnack = () => setSnackbar(false)\n\n  return (\n  <>\n    <Drawer anchor=\"right\" open={drawer} onClose={closeDrawer}>\n        <div className=\"drawer-layout\">\n            <h2>Deal {`${lead.prefix}-${lead.seller}-${lead.number}`}</h2>\n            <FormControl>\n                <Select\n                    className=\"drawer-status\"\n                    value={lead.status}\n                    onChange={handleDateChange(lead._id, lead, lead.status)} //Se utiliza la misma función de fecha\n                    inputProps={{\n                    name: 'status',\n                    id: 'status',\n                    }}\n                >\n                <MenuItem value={'Propuesta'} >Propuesta</MenuItem>\n                <MenuItem value={'Negociación'} >Negociación</MenuItem>\n                <MenuItem value={'Confirmación de pedido'} >Confirmación de pedido (Ganada)</MenuItem>\n                <MenuItem value={'Perdida'} >Perdida</MenuItem>\n                <MenuItem value={'Primer Cobro'} >Primer cobro</MenuItem>\n                </Select>\n            </FormControl>\n            <Divider variant=\"middle\" />\n            <h3 style={{color:\"rgb(115, 115, 115)\"}}>{lead.clientName ? lead.clientName.bussinessName : ''}</h3>\n            <div className=\"drawer-two-columns\">\n                <div className=\"left-column\">\n                    <p className=\"small-font\" >Contacto:</p>\n                    <p className=\"blue-font\">\n                        {lead.contactName ? lead.contactName : 'Ninguno'} \n                        <small style={{color:\"gray\"}}> ({lead.contactPosition ? lead.contactPosition : '-'})</small>\n                    </p>\n                    <p className=\"small-font\">Teléfono:</p>\n                    <p className=\"blue-font\">{lead.contactPhone ? lead.contactPhone : '-'}</p>\n                    <p className=\"small-font\">Email:</p>\n                    <p className=\"blue-font\">{lead.contactEmail ? lead.contactEmail : 'Sin email'}</p>\n                    <p className=\"small-font\">Dirección:</p>\n                    {lead.clientName ? <p className=\"blue-font\">{lead.clientName.bussinessAddress ? lead.clientName.bussinessAddress : 'Sin dirección'}</p> : 'Sin dirección'}\n                </div>\n                <div className=\"right-column\">\n                    <p className=\"small-font\">Giro:</p>\n                    {lead.clientName ? <p className=\"blue-font\">{lead.clientName.bussinessRole ? lead.clientName.bussinessRole : 'Sin giro'}</p> : 'Sin giro'}\n                    <p className=\"small-font\">Industria:</p>\n                    {lead.clientName ? <p className=\"blue-font\">{lead.clientName.industry ? lead.clientName.industry : 'Sin industria'}</p> : 'Sin industria'}\n                    <p className=\"small-font\">Origen:</p>\n                    {lead.clientName ? <p className=\"blue-font\">{lead.clientName.origin ? lead.clientName.origin : 'Sin origen'}</p> : 'Sin origen'}\n                    <p className=\"small-font\">Empleados:</p>\n                    {lead.clientName ? <p className=\"blue-font\">{lead.clientName.bussinessEmployees ? lead.clientName.bussinessEmployees : 'Sin empleados'}</p> : 'Sin empleados'}\n                </div>\n            </div>\n            <Divider variant=\"middle\" />\n            <div className=\"\">\n                {/* Comentarios del lead*/}\n                <p className=\"small-font\">Comentarios</p>\n                <p className=\"blue-font\">{lead.commentText}</p>\n                <Divider />\n                \n                {/* Cotizaciones */}\n                <p className=\"small-font\">Cotizaciones</p>\n                <Paper style={{maxWidth:\"800px\"}}>\n                    <Table>\n                    <TableHead>\n                    <TableRow>\n                        <TableCell>ID</TableCell>\n                        <TableCell style={{width:\"200px\", padding: \"8px\"}} >Fecha</TableCell>\n                        <TableCell style={{width:\"200px\", padding: \"8px\"}} >PO</TableCell>\n                        <TableCell style={{width:\"200px\", padding: \"8px\"}} >Factura</TableCell>\n                        <TableCell>Descripción</TableCell>\n                        <TableCell>Monto mensual</TableCell>\n                        <TableCell style={{width:\"200px\", padding: \"0px\"}}>Acciones</TableCell>\n                        {/* <TableCell style={{width:\"200px\", padding: \"0px\"}}></TableCell> */}\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {quotations.length ? quotations.filter(quot => quot.active === true).map(quot =>\n                            <TableRow key={quot._id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {quot.quotPrefix}\n                                </TableCell>\n                                <TableCell style={{width:\"200px\", padding: \"8px\"}} >{moment(quot.createdAt).format(\"d/MMMM/Y\")}</TableCell>\n                                <TableCell style={{width:\"200px\", padding: \"8px\"}} >{quot.quotPO ? quot.quotPO : 'Sin orden de compra'}</TableCell>\n                                <TableCell style={{width:\"200px\", padding: \"8px\"}} >{quot.quotBill ? quot.quotBill : 'Sin factura'}</TableCell>\n                                <TableCell>{quot.quotDescription ? quot.quotDescription : 'Sin descripción'}</TableCell>\n                                <TableCell>{quot.quotAmount ? <Currency quantity={quot.quotAmount}/> : '$0'}</TableCell>\n                                <TableCell style={{width:\"200px\", padding: \"0px\"}}>\n                                <Tooltip title=\"Editar\" placement=\"right\">\n                                    <IconButton onClick={() => toggleEditQuotation(quot)} aria-label=\"Delete\">\n                                        <Edit fontSize=\"small\" />\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Eliminar\" placement=\"right\">\n                                    <IconButton onClick={() => {delQuotation(quot._id, lead._id); getQuotations()}} aria-label=\"Delete\">\n                                        <Delete fontSize=\"small\" />\n                                    </IconButton>\n                                </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        ) : \n                        <TableRow>\n                            <TableCell component=\"th\" scope=\"row\">\n                                Sin cotizaciones\n                            </TableCell>\n                        </TableRow>}\n                    </TableBody>\n                    </Table>\n                </Paper>\n                <Button onClick={toggleQuotation} style={{margin: \"1rem\"}} variant=\"contained\">Crear cotización</Button>\n                <Divider />\n                \n                {/* Manejo de archivos */}\n                <p className=\"small-font\">Archivos</p>\n                <FileUpload updateLeadState={updateLeadState} lead={lead}/>\n\n            </div>\n            {/* Botones de acción para Drawer */}\n            <div className=\"button-container\">\n                <Button variant=\"contained\" onClick={closeDrawer} >Cerrar</Button>\n                <Button onClick={toggleDialog} variant=\"contained\" color=\"secondary\">\n                    Borrar\n                </Button>\n                <Button onClick={() =>{openDialog(lead,'update')}} variant=\"contained\" color=\"primary\">\n                    Editar\n                </Button>\n            </div>\n        </div>\n        {/* Diálogo de confirmación para eliminar lead */}\n        <Dialog\n            open={open}\n            onClose={toggleDialog}\n        >\n            <DialogTitle>\n                Eliminar {`${lead.prefix}-${lead.seller}-${lead.number}`}\n            </DialogTitle>\n            <DialogActions>\n                <Button onClick={toggleDialog} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={() => {deleteLead(lead._id); toggleDialog(); closeDrawer()}} color=\"secondary\" autoFocus>\n                    Eliminar\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        {/* Diálogo para edición de lead */}\n        <FormDialog \n        closeDrawer={closeDrawer}\n        dialog={dialog} \n        closeDialog={closeDialog} \n        handleChange={handleChange} \n        lead={lead}\n        updateLead={updateLead}/>\n\n        {/* Diálogo para crear cotiaciones */}\n        <Dialog\n            open={openQuot}\n            onClose={toggleQuotation}\n        >\n            <DialogTitle>\n                Nueva cotización para {`${lead.prefix}-${lead.seller}-${lead.number}`} <small style={{color:\"rgb(115, 115, 115)\"}}>({lead.clientName ? lead.clientName.bussinessName : ''})</small>\n            </DialogTitle>\n            <DialogContent> \n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    id=\"quotPO\"\n                    name=\"quotPO\"\n                    label=\"Orden de compra\"\n                    type=\"number\"\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    id=\"quotBill\"\n                    name=\"quotBill\"\n                    label=\"Factura\"\n                    type=\"number\"\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    id=\"quotDescription\"\n                    name=\"quotDescription\"\n                    label=\"Descripción\"\n                    type=\"text\"\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <FormControl style={{marginTop:\"1rem\"}}>\n                    <InputLabel htmlFor=\"adornment-amount\">Monto mensual</InputLabel>\n                    <Input\n                    type=\"number\"\n                    id=\"quotAmount\"\n                    name=\"quotAmount\"\n                    onChange={handleQuotation}\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={toggleQuotation} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={() => {toggleQuotation(); submitQuotation(lead._id);}} color=\"primary\" autoFocus>\n                    Crear\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n        {/* Diálogo para editar cotiaciones */}\n        <Dialog\n            open={editQuot}\n            onClose={toggleEditQuotation}\n        >\n            <DialogTitle>\n                Editar cotización {quotation.quotPrefix ? quotation.quotPrefix : ''} <small style={{color:\"rgb(115, 115, 115)\"}}>({lead.clientName ? lead.clientName.bussinessName : ''})</small>\n            </DialogTitle>\n            <DialogContent> \n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    name=\"quotPO\"\n                    label=\"Orden de compra\"\n                    type=\"number\"\n                    defaultValue={quotation.quotPO}\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    name=\"quotBill\"\n                    label=\"Factura\"\n                    type=\"number\"\n                    defaultValue={quotation.quotBill}\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <TextField \n                    autoFocus\n                    margin=\"dense\"\n                    name=\"quotDescription\"\n                    label=\"Descripción\"\n                    type=\"text\"\n                    defaultValue={quotation.quotDescription}\n                    onChange={handleQuotation}\n                    fullWidth\n                />\n                <FormControl style={{marginTop:\"1rem\"}}>\n                    <InputLabel htmlFor=\"adornment-amount\">Monto mensual</InputLabel>\n                    <Input\n                    type=\"number\"\n                    name=\"quotAmount\"\n                    defaultValue={quotation.quotAmount}\n                    onChange={handleQuotation}\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={toggleEditQuotation} color=\"primary\">\n                    Cancelar\n                </Button>\n                <Button onClick={() => {updateQuotation(quotation._id, quotation, lead._id);toggleEditQuotation();}} color=\"primary\" autoFocus>\n                    Actualizar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </Drawer>\n    <Snack close={closeSnack} message={message} open={snackbar}/>\n    </>)\n}\n\nexport default LeadDrawer","import React, { useState } from 'react'\nimport { Table, TableBody, TableHead, TableCell, TableRow, Paper, \n    TablePagination, CircularProgress, Grid, FormControl, Select, MenuItem, Fab, TextField, Tooltip } from '@material-ui/core'\nimport { Edit, FilterList } from '@material-ui/icons';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns'\nimport esLocale from 'date-fns/locale/es'\nimport LeadDrawer from './LeadDrawer';\nimport { getQuot } from '../../../services/quotations'\n\nconst LeadsTable = ({leads, rowsPerPage, page, handleChangePage, \n    handleChangeRowsPerPage, deleteLead, dialog, closeDialog, handleChange, lead, \n    openDialog, updateLead, handleDateChange, loading, openDrawer, closeDrawer, \n    drawer, updateLeadState}) => {\n        \n        const [ arrayFilter, setArrayFilter ] = useState('')\n        let handleArrayFilter = e => setArrayFilter(e.target.value)\n\n        const [quotations, setQuotations ] = useState([])\n\n        let getQuotations = id => {\n            getQuot(id)\n                .then(quotations => setQuotations(quotations.data.quotations))\n                .catch(err => err)\n        }\n\n  return (<div>\n    <Paper id=\"tablas\" style={{width:\"100%\", margin: \"1em auto\", padding:\"1em\"}}>\n    <div style={{overflowX: 'auto'}}>\n    <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n        {/* Título de tabla DEALS */}\n        <h4 style={{textAlign:\"left\", marginLeft:\"1rem\"}}>Deals</h4>\n        <Tooltip title=\"Filtrar lista\" placement=\"bottom\">\n            <Grid style={{width:\"auto\"}} container alignItems=\"flex-end\">\n            <Grid item>\n                <TextField onChange={handleArrayFilter}  id=\"search-on-table\" label=\"ID/Empresa\" />\n            </Grid>\n                <Grid item>\n                    <FilterList/>\n                </Grid>\n            </Grid>\n        </Tooltip>\n    </div>\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell style={{width:\"40px\", padding: \"8px\"}}>Ver/Editar</TableCell>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Empresa</TableCell>\n                    <TableCell>Contacto</TableCell>\n                    <TableCell>Teléfono</TableCell>\n                    <TableCell>Email</TableCell>\n                    <TableCell>Estatus</TableCell>\n                    <TableCell>Reunión</TableCell>\n                    <TableCell style={{width:'200px', padding:\"0 45px\"}}></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n            {leads.length ? \n            leads.filter(lead => lead.clientName ? \n                lead.prefix.concat('-',lead.seller,'-',lead.number).includes(arrayFilter.toUpperCase()) || \n                lead.clientName.bussinessName.toLowerCase().includes(arrayFilter.toLowerCase()) : []).map((lead, k) => {\n                return (\n                //el 10 se reemplaza por el número de filas en la tabla para la paginación\n                (k < ((page * 10) + 10) && k >= (page * 10)) ? \n                <TableRow key={k}>\n                    {/* Detalle  de cada deal*/}\n                    <TableCell style={{width: \"40px\", padding: \"8px\", textAlign: \"center\"}}>\n                        <Fab \n                            onClick={() => {openDrawer(lead); getQuotations(lead._id)}} \n                            variant=\"extended\" \n                            color=\"primary\" \n                            size=\"small\"\n                        >\n                            <Edit fontSize=\"small\" />\n                        </Fab>\n                    </TableCell>\n                    <TableCell style={{width:\"200px\", padding: \"8px\"}}>{`${lead.prefix}-${lead.seller}-${lead.number}`}</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {lead.clientName ? lead.clientName.bussinessName : null}\n                    </TableCell>\n                    <TableCell>{lead.contactName}</TableCell>\n                    <TableCell><a style={{color:\"#1976d2\"}} href={`tel:+${lead.contactPhone}`}>{lead.contactPhone}</a></TableCell>\n                    <TableCell><a style={{color:\"#1976d2\"}} href={`mailto:${lead.contactEmail}`}>{lead.contactEmail}</a></TableCell>\n                    {/* Opciones de interesado */}\n                    <TableCell>\n                        <FormControl>\n                            <Select\n                                value={lead.status}\n                                onChange={handleDateChange(lead._id, lead, lead.status)} //Se utiliza la misma función de fecha\n                                inputProps={{\n                                name: 'status',\n                                id: 'status',\n                                }}\n                            >\n                            <MenuItem value={'Propuesta'} >Propuesta</MenuItem>\n                            <MenuItem value={'Negociación'} >Negociación</MenuItem>\n                            <MenuItem value={'Confirmación de pedido'} >Confirmación de pedido (Ganada)</MenuItem>\n                            <MenuItem value={'Perdida'} >Perdida</MenuItem>\n                            <MenuItem value={'Primer Cobro'} >Primer cobro</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </TableCell>\n                    {/* Inputs de fecha y hora de reunión */}\n                    <TableCell style={{width:\"200px\", padding: \"8px\"}}> \n                        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale} views={['year']}>\n                            <Grid container justify=\"space-around\">\n                            <DatePicker\n                                okLabel=\"Guardar\"\n                                cancelLabel=\"Cancelar\"\n                                label=\"Fecha\"\n                                value={lead.meetingDate}\n                                onChange={handleDateChange(lead._id, lead, null)}\n                                format={'dd/MM/yyyy'}\n                            />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n                    </TableCell>\n                    <TableCell style={{width:\"200px\", padding: \"5px\"}}> \n                        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={esLocale}>\n                            <Grid container justify=\"space-around\">\n                            <TimePicker\n                                okLabel=\"Guardar\"\n                                cancelLabel=\"Cancelar\"\n                                label=\"Hora\"\n                                value={lead.meetingDate}\n                                onChange={handleDateChange(lead._id, lead, null)}\n                            />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n                    </TableCell>\n                </TableRow> : \"\"\n                );\n            }) : <TableRow>\n                    <TableCell style={{width:\"200px\", padding: \"5px\"}} component=\"th\" scope=\"row\">\n                       {loading ? 'Cargando...' : 'No hay leads'}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {loading ? <CircularProgress color=\"secondary\" style={{margin:\"1em\"}}/> : ''}\n                    </TableCell>\n                </TableRow>}\n            </TableBody>\n        </Table>\n    </div>\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"Table\"\n          count={leads ? leads.length : 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </Paper>\n\n    <LeadDrawer \n            drawer={drawer}\n            closeDrawer={closeDrawer}\n            leads={leads}\n            deleteLead={deleteLead} \n            handleChange={handleChange} \n            lead={lead}\n            updateLead={updateLead}\n            handleDateChange={handleDateChange}\n            loading={loading}\n            dialog={dialog}\n            closeDialog={closeDialog}\n            openDialog={openDialog}\n            updateLeadState={updateLeadState}\n            quotations={quotations}\n            getQuotations={getQuotations}\n        />\n  </div>)\n}\n\nexport default LeadsTable\n","import React from 'react'\nimport { Button } from '@material-ui/core'\nimport '../styles.css'\nimport LeadsTable from './LeadsTable';\nimport FormDialog from './FormDialog';\n\nconst SalesOp = ({handleChange, lead, leads, handleChangePage, handleChangeRowsPerPage,\n    rowsPerPage, page, submitLead, clearLead, deleteLead, openDialog, closeDialog, dialog, \n    dialogNew, updateLead, handleDateChange, loading, openDrawer, closeDrawer, drawer,\n    updateLeadState}) => {\n  return (\n    <div\n    style={{margin:\"1em 0\"}}>\n        <LeadsTable\n            handleChangePage={handleChangePage} \n            handleChangeRowsPerPage={handleChangeRowsPerPage} \n            page={page} \n            rowsPerPage={rowsPerPage}\n            leads={leads}\n            deleteLead={deleteLead} \n            dialog={dialog} \n            openDialog={openDialog}\n            closeDialog={closeDialog} \n            handleChange={handleChange} \n            lead={lead}\n            clearLead={clearLead}\n            submitLead={submitLead}\n            updateLead={updateLead}\n            handleDateChange={handleDateChange}\n            loading={loading}\n            openDrawer={openDrawer}\n            closeDrawer={closeDrawer}\n            drawer={drawer}\n            updateLeadState={updateLeadState}\n        />\n        \n        <div>\n            <Button onClick={() => openDialog({},'new')} variant=\"contained\" color=\"primary\">\n                Nuevo Deal\n            </Button>\n        </div>\n\n        <FormDialog \n        dialogNew={dialogNew} \n        closeDialog={closeDialog} \n        handleChange={handleChange} \n        lead={lead}\n        clearLead={clearLead}\n        submitLead={submitLead}/>\n    </div>\n  )\n}\n\n\nexport default SalesOp","import React, {useState} from 'react'\nimport { TextField, Button, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\nimport '../styles.css'\n\nconst ClientDialog = ({ dialog, closeDialog, handleChange, dialogNew, client={}, submitClient, deleteClient }) => {\n    \n    const [ deleteDialog, setDeleteDialog ] = useState(false)\n    let toggleDeleteDialog = () => setDeleteDialog(!deleteDialog)\n\n  return (\n    <Dialog\n            open={dialogNew || dialog}\n            onClose={closeDialog}\n            aria-labelledby=\"new-form\"\n        >\n            <DialogTitle>{dialogNew ? 'Agregar cliente' : `Editar ${client.bussinessName}`}</DialogTitle>\n            <DialogContent>\n                {/* FORM */}\n                <form className=\"sales-oportunity-fields\" autoComplete=\"off\">\n                    <div>\n                        <TextField\n                            required\n                            className=\"text-field\"\n                            id=\"bussinessName\"\n                            label=\"Nombre de la empresa\"\n                            value={client.bussinessName}\n                            onChange={handleChange}\n                        />\n                \n                        <TextField\n                            required\n                            className=\"text-field\"\n                            id=\"bussinessAddress\"\n                            label=\"Dirección\"\n                            value={client.bussinessAddress}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <TextField\n                            required\n                            className=\"text-field\"\n                            id=\"bussinessRole\"\n                            label=\"Giro\"\n                            value={client.bussinessRole}\n                            onChange={handleChange}\n                        />\n\n                        <TextField\n                            className=\"text-field\"\n                            type=\"text\"\n                            id=\"industry\"\n                            label=\"Industria\"\n                            value={client.industry}\n                            onChange={handleChange}\n                        />\n\n                        <FormControl className=\"text-field\">\n                            <InputLabel shrink htmlFor=\"origin\">Origen</InputLabel>\n                            <Select\n                                required\n                                value={client.origin}\n                                onChange={handleChange}\n                                inputProps={{\n                                name: 'Origen',\n                                id: 'origin',\n                                }}\n                            >\n                            <MenuItem value=\"\" disabled>\n                                <em>Selecciona  </em>\n                            </MenuItem>\n                            <MenuItem value={'Nacional'} >Nacional</MenuItem>\n                            <MenuItem value={'Extranjero'} >Extranjero</MenuItem>\n                            </Select>\n                        </FormControl>\n                \n                        <TextField\n                            required\n                            type=\"number\"\n                            className=\"text-field\"\n                            id=\"bussinessEmployees\"\n                            label=\"No. de empleados\"\n                            value={client.bussinessEmployees}\n                            onChange={handleChange}\n                        />\n                    </div>\n                </form>\n            </DialogContent>\n            {dialogNew ? \n                <DialogActions>\n                <Button onClick={closeDialog} >Cancelar</Button>\n                <Button onClick={submitClient} color=\"primary\" variant=\"contained\">\n                    Agregar\n                </Button> \n            </DialogActions>: \n            <DialogActions>\n                <Button onClick={closeDialog} >Cancelar</Button>\n                <Button onClick={() => toggleDeleteDialog(client._id)} color=\"secondary\" variant=\"contained\" >Borrar</Button>\n                <Button onClick={() => submitClient('update')} color=\"primary\" variant=\"contained\">\n                    Actualizar\n                </Button> \n            </DialogActions>}\n                \n            <Dialog\n            open={deleteDialog}\n            onClose={toggleDeleteDialog}\n            >\n                <DialogTitle>\n                    Eliminar {`${client.bussinessName}`}\n                </DialogTitle>\n                <DialogActions>\n                    <Button onClick={toggleDeleteDialog} color=\"primary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={() => {deleteClient(client._id); toggleDeleteDialog();}} color=\"secondary\" autoFocus>\n                        Eliminar\n                    </Button>\n                </DialogActions>\n             </Dialog>\n        </Dialog>\n  )\n}\n\nexport default ClientDialog\n","import React, {useState} from 'react'\nimport { Table, TableBody, TableHead, TableCell, TableRow, Paper, \n    TablePagination, CircularProgress, Grid, TextField, Tooltip, Fab} from '@material-ui/core'\nimport { Edit, FilterList } from '@material-ui/icons';\nimport ClientDialog from './ClientDialog';\n\nconst ClientTable = ({rowsPerPage, page, handleChangePage, handleChangeRowsPerPage, dialog, \n    closeDialog, handleChange, openDialog, loading, client, clients=[], submitClient, deleteClient}) => {\n        \n        const [ arrayFilter, setArrayFilter ] = useState('')\n        let handleArrayFilter = e => setArrayFilter(e.target.value)\n\n  return (<div>\n    <Paper id=\"tablas\" style={{width:\"100%\", margin: \"1em auto\", padding:\"1em\"}}>\n    <div style={{overflowX: 'auto'}}>\n    <div style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n        <h4 style={{textAlign:\"left\", marginLeft:\"1rem\"}}>Clientes</h4>\n        <Tooltip title=\"Filtrar lista\" placement=\"bottom\">\n            <Grid style={{width:\"auto\"}} container alignItems=\"flex-end\">\n            <Grid item>\n                <TextField onChange={handleArrayFilter} value={arrayFilter} id=\"search-on-table\" label=\"ID/Nombre\" />\n            </Grid>\n                <Grid item>\n                    <FilterList/>\n                </Grid>\n            </Grid>\n        </Tooltip>\n    </div>\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell style={{width:\"40px\", padding: \"8px\"}}>Ver/Editar</TableCell>\n                <TableCell>ID</TableCell>\n                <TableCell>Nombre</TableCell>\n                <TableCell>Dirección</TableCell>\n                <TableCell>Giro</TableCell>\n                <TableCell>Industria</TableCell>\n                <TableCell>Origen</TableCell>\n                <TableCell>Empleados</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {clients.length ? clients.filter(client => client.bussinessName.toLowerCase().includes(arrayFilter.toLowerCase()) ).map((client, k) => {\n                return (\n                //el 10 se reemplaza por el número de filas en la tabla para la paginación\n                (k < ((page * 10) + 10) && k >= (page * 10)) && client.active ? \n                <TableRow key={k}>\n                    <TableCell style={{width: \"40px\", padding: \"8px\", textAlign: \"center\"}}>\n                        <Fab\n                            onClick={() => openDialog(client, 'update')} \n                            variant=\"extended\" \n                            color=\"primary\" \n                            size=\"small\"\n                        >\n                            <Edit fontSize=\"small\" />\n                        </Fab>\n                    </TableCell>\n                    <TableCell>ID</TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {client.bussinessName}\n                    </TableCell>\n                    <TableCell style={{width:\"200px\", padding: \"8px\"}}>{client.bussinessAddress}</TableCell>\n                    <TableCell>{client.bussinessRole}</TableCell>\n                    <TableCell>{client.industry}</TableCell>\n                    <TableCell>{client.origin}</TableCell>\n                    <TableCell>{client.bussinessEmployees}</TableCell>\n                </TableRow> : ''\n                )\n            }) : \n            <TableRow>\n                <TableCell style={{width:\"200px\", padding: \"5px\"}} component=\"th\" scope=\"row\">\n                {loading ? 'Cargando...' : 'No hay clientes'}\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {loading ? <CircularProgress color=\"secondary\" style={{margin:\"1em\"}}/> : ''}\n                </TableCell>\n            </TableRow>}\n            </TableBody>\n        </Table>\n    </div>\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"Table\"\n          count={clients ? clients.filter(client => client.active === true).length : 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n    </Paper>\n\n    <ClientDialog\n        dialog={dialog} \n        closeDialog={closeDialog} \n        handleChange={handleChange} \n        client={client}\n        submitClient={submitClient}\n        deleteClient={deleteClient}\n    />\n  </div>)\n}\n\nexport default ClientTable\n","import React, { Component } from 'react'\nimport { Button } from '@material-ui/core'\nimport '../styles.css'\nimport ClientTable from './ClientTable';\nimport ClientDialog from './ClientDialog';\nimport Snack from '../../snackbar/Snack';\nimport { allClients, newClient, updateClient, delClient } from '../../../services/clients'\n\nexport default class Clients extends Component {\n    state={\n        user: {},\n        client: {},\n        clients: [],\n        loading: true,\n        page: 0,\n        rowsPerPage: 10,\n        message: String,\n        dialog: false,\n        dialogNew: false,\n        open: false\n    }\n    componentDidMount = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) return this.props.history.push('/login')\n        this.setState({user}, () => this.getClients())\n    }\n    \n    componentWillUnmount = () => this.setState({loading: true})\n    \n    handleChange = e => {\n        const { client } = this.state\n        if(e.target.name === 'Origen') {\n            client['origin'] = e.target.value\n            return this.setState({client})\n        }\n        client[e.target.id] = e.target.value\n        this.setState({client})\n    }\n\n    getClients = () => allClients()\n                        .then(clients => this.setState({clients: clients.data.reverse(), loading: false}))\n                        .catch(err => console.log(err))\n\n    submitClient = action =>  {\n        const { client } = this.state\n        if(action === 'update'){\n            return updateClient(client)\n                .then(upClient => this.setState({dialog: false, open: true, message:'Cliente actualizado'}, this.getClients))\n                .catch(err => console.log(err))\n        }\n        newClient(client)\n            .then(client => this.setState({dialogNew: false, open: true, message:'Cliente agregado'}, this.getClients))\n            .catch(err => console.log(err))\n    }\n\n    deleteClient = id => {\n        delClient(id)\n            .then(status => this.setState({dialog: false, open: true, message:'Cliente eliminado'}, this.getClients))\n            .catch(err => err)\n    }\n\n    close = () => this.setState({ open: false })\n\n    openDialog = (item, action) => {\n        if(action === 'update'){\n            this.setState({dialog: true, client: item})\n            }\n        else this.setState({dialogNew: true, client:{}})\n    }\n\n    closeDialog = () => this.setState({ dialog: false, dialogNew: false }, this.getClients)\n\n    handleChangePage = (event, page) => this.setState({ page })\n\n    handleChangeRowsPerPage = event => this.setState({ rowsPerPage: event.target.value })\n\n  render() {\n      const { loading, page, rowsPerPage, message, dialog, dialogNew, open, clients, client } = this.state\n      const { close, openDialog, closeDialog, handleChangePage, handleChangeRowsPerPage, submitClient, handleChange, deleteClient } = this\n    return (\n        <div\n        style={{margin:\"1em 0\"}}>\n            <ClientTable\n                handleChangePage={handleChangePage} \n                handleChangeRowsPerPage={handleChangeRowsPerPage} \n                page={page} \n                rowsPerPage={rowsPerPage}\n                dialog={dialog} \n                loading={loading}\n                clients={clients}\n                client={client}\n                handleChange={handleChange}\n                submitClient={submitClient}\n                openDialog={openDialog}\n                closeDialog={closeDialog}            \n                deleteClient={deleteClient}\n            />\n            <div>\n                <Button onClick={() => openDialog({},'new')} variant=\"contained\" color=\"primary\">\n                    Nuevo cliente\n                </Button>\n            </div>\n            <ClientDialog\n            client={client}\n            dialogNew={dialogNew} \n            closeDialog={closeDialog} \n            handleChange={handleChange}\n            submitClient={submitClient}\n            />\n            <Snack close={close} message={message} open={open}/>\n        </div>\n    )\n  }\n}\n","import React from 'react'\nimport SalesOp from './saleOportunity/SalesOp';\nimport Clients from './clients/Clients';\n\nconst TabContent = ({value, handleChange, lead, leads, handleChangePage, handleChangeRowsPerPage,\n    handleClose, rowsPerPage, page, submitLead, getLeads, clearLead, deleteLead, openDialog, \n    closeDialog, dialog, updateLead, dialogNew, handleDateChange, quotations, quotation, loading,\n    openDrawer, closeDrawer, drawer, updateLeadState}) => {\n  return (\n    <div className=\"tab-content\">\n      {\n        value === 0 ? <SalesOp \n                        handleChange={handleChange}\n                        handleChangePage={handleChangePage} \n                        handleChangeRowsPerPage={handleChangeRowsPerPage} \n                        page={page} \n                        rowsPerPage={rowsPerPage}\n                        lead={lead}\n                        leads={leads}\n                        handleClose={handleClose}\n                        submitLead={submitLead}\n                        getLeads={getLeads}\n                        clearLead={clearLead}\n                        deleteLead={deleteLead}\n                        openDialog={openDialog}\n                        closeDialog={closeDialog}\n                        dialog={dialog}\n                        dialogNew={dialogNew}\n                        updateLead={updateLead}\n                        handleDateChange={handleDateChange}\n                        loading={loading}\n                        openDrawer={openDrawer}\n                        closeDrawer={closeDrawer}\n                        drawer={drawer}\n                        updateLeadState={updateLeadState}\n                      /> :\n        value === 1 ? <Clients/> : \n        'otro'\n      }\n    </div>\n  )\n}\n\nexport default TabContent\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { styles } from '../home/styles'\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport TabContent from './TabContent';\nimport { getAll, newLead, removeLead, removeUserLead, actLead } from '../../services/leadsDB'\nimport Snack from '../snackbar/Snack';\n\nclass Sales extends Component {\n    state = {\n        value: 0,\n        lead: {},\n        leads: [],\n        quotation: {},\n        quotations: [],\n        user: {},\n        page: 0,\n        rowsPerPage: 10,\n        message: String,\n        open: false,\n        dialog: false,\n        dialogNew: false,\n        loading: true,\n        drawer: false\n    }\n\n    componentDidMount = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) return this.props.history.push('/login')\n        this.setState({user}, () => this.getLeads())\n        \n    }\n    \n    componentWillUnmount = () => this.setState({loading: true})\n\n    handleChange = e => {\n        const { lead } = this.state\n        if(e.target.name === 'Origen') {\n            lead['origin'] = e.target.value\n            return this.setState({lead})\n        }\n        if(e.target.name === 'clientName') {\n            lead['clientName'] = e.target.value\n            return this.setState({lead})\n        }\n        lead[e.target.name] = e.target.value\n        this.setState({lead})\n    }\n\n    handleDateChange = (id, newLead, status = null, quotation = null) => date => {\n        const lead = newLead\n        \n        if(quotation !== null){\n            const quotation = newLead\n            quotation['quotDate'] = date\n            return this.setState({quotation}, () => this.updateQuot(id))\n        }\n\n        if(status === null){\n            lead['meetingDate'] = date\n            return this.setState({lead}, () => this.updateLead(id))\n        }\n        \n        if(date.target.name === 'status'){\n            lead['status'] = date.target.value\n            return this.setState({lead}, () => {this.updateLead(id);})    \n        }\n    }\n\n    getLeads = () => {\n        const { user } = this.state\n        getAll(user._id)\n            .then(userLeads => this.setState({leads: userLeads.data.leads.reverse(), loading: false}))\n            .catch(err => console.log(err))\n    }\n\n    submitLead = () => {\n        const { user, lead, leads = [] } = this.state\n        lead['commentPostedBy'] = user._id\n        lead.prefix = 'LD'\n        lead.seller = user.name[0].toUpperCase() + user.name[1].toUpperCase()\n        lead.number = leads.length > 0 ? leads[0].number + 1 : 1\n        newLead(user._id, lead)\n            .then(userUpdated => {\n                localStorage.setItem('user', JSON.stringify(userUpdated.data))\n                this.getLeads(user._id)\n                this.setState({dialogNew: false, open: true, message:'Lead creado'}, this.clearLead)\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateLead = id => {\n        const { lead } = this.state\n        actLead(id, lead)\n            .then(newLead => {\n                this.setState({dialog: false, open: true, message:'Actualizado correctamente'})\n                this.getLeads()\n            })\n            .catch(err => console.log(err))\n    }\n    \n    clearLead = () => {\n        const { lead } = this.state\n        Object.keys(lead).map(key => lead[key] = '')\n        this.setState({lead})\n    }\n\n    deleteLead = (leadID) => {\n        const { user } = this.state\n        const id = {'id': leadID}\n        removeLead(id)\n            .then(newLead => newLead)\n            .catch(err => console.log(err))\n        removeUserLead(user._id, id)\n            .then(userUpdated => {\n                localStorage.setItem('user', JSON.stringify(userUpdated.data))\n                this.getLeads()\n                this.setState({dialog: false, open: true, message:'Lead eliminado'})\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleTabs = (event,value) => this.setState({value})\n    \n    close = () => this.setState({ open: false })\n\n    openDialog = (item, action) => {\n        if(action === 'update'){\n            this.setState({dialog: true, lead: item})\n            }\n        else if(action === 'updateQuot'){\n            this.setState({dialog: true, quotation: item})\n            }\n        else this.setState({dialogNew: true, lead:{}})\n    }\n\n    closeDialog = () => {\n        this.setState({ dialog: false, dialogNew: false }, this.getLeads)\n    }\n\n    openDrawer = lead => this.setState({drawer:true, lead})\n\n    closeDrawer = () => this.setState({drawer: false, lead: {}}, () => this.getLeads())\n\n    handleChangePage = (event, page) => this.setState({ page })\n\n    handleChangeRowsPerPage = event => this.setState({ rowsPerPage: event.target.value })\n\n    updateLeadState = lead => {\n        this.setState({lead}, () => this.getLeads())\n    }\n\n  render() {\n      const { classes } = this.props\n      const { value, message, page, rowsPerPage, lead, user, open, leads, dialog,\n            dialogNew, client, quotations, loading, drawer, quotation } = this.state\n      const { handleTabs, handleChange, handleChangePage, handleChangeRowsPerPage, close,\n            submitLead, getLeads, clearLead, deleteLead, closeDialog, openDialog,\n            updateLead, handleDateChange, openDrawer, closeDrawer, updateLeadState } = this\n    return (\n      <div className={classes.salesMenuRoot}>\n        <AppBar position=\"static\" color=\"default\">\n            <Tabs\n                value={value}\n                onChange={handleTabs}   \n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n            >\n                <Tab onClick={getLeads} label=\"Oportunidad de venta\" />\n                <Tab label=\"Administrar clientes\" />\n                <Tab label=\"Formalizar cuentas\" />\n                <Tab label=\"Supervisar implementación del servicio\" />\n                <Tab label=\"Quejas/Sugerencias\" />\n            </Tabs>\n        </AppBar>\n        <TabContent \n            value={value} \n            handleChange={handleChange} \n            handleChangePage={handleChangePage} \n            handleChangeRowsPerPage={handleChangeRowsPerPage} \n            page={page} \n            rowsPerPage={rowsPerPage}\n            lead={lead}\n            leads={leads}\n            user={user}\n            submitLead={submitLead}\n            getLeads={getLeads}\n            clearLead={clearLead}\n            deleteLead={deleteLead}\n            dialog={dialog}\n            openDialog={openDialog}\n            closeDialog={closeDialog}\n            dialogNew={dialogNew}\n            updateLead={updateLead}\n            handleDateChange={handleDateChange}\n            client={client}\n            quotations={quotations}\n            quotation={quotation}\n            loading={loading}\n            openDrawer={openDrawer}\n            closeDrawer={closeDrawer}\n            drawer={drawer}\n            updateLeadState={updateLeadState}\n        />\n        <Snack close={close} message={message} open={open}/>\n      </div>\n    )\n  }\n}\n\nSales.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Sales)","import React, { useState } from 'react'\nimport { Table, TableBody, TableHead, TableCell, TableRow,\n         TablePagination, CircularProgress, Tooltip, Grid, TextField } from '@material-ui/core'\nimport './styles.css'\nimport moment from 'moment'\nimport { FilterList } from '@material-ui/icons';\nrequire('moment/locale/es')\n\nconst LeadsTable = ({leads, page, rowsPerPage, handleChangePage, loading, orderById}) => {\n\n    const [ arrayFilter, setArrayFilter ] = useState('')\n    let handleArrayFilter = e => setArrayFilter(e.target.value)\n    \n\n  return (\n    <div style={{marginTop: \"1em\"}}>\n        <div style={{display:\"flex\", justifyContent:\"flex-end\", alignItems:\"center\"}}>\n            <Tooltip title=\"Filtrar lista\" placement=\"bottom\">\n                <Grid style={{width:\"auto\"}} container alignItems=\"flex-end\">\n                <Grid item>\n                    <TextField onChange={handleArrayFilter}  id=\"search-on-table\" label=\"ID/Empresa\" />\n                </Grid>\n                    <Grid item>\n                        <FilterList/>\n                    </Grid>\n                </Grid>\n            </Tooltip>\n        </div>\n        <Table>\n            <TableHead>\n            <TableRow>\n                <TableCell> <span className=\"order-cell\" onClick={orderById}>ID</span></TableCell>\n                <TableCell>Empresa</TableCell>\n                <TableCell>Estatus</TableCell>\n                <TableCell>Reunión</TableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {leads.length ? leads.filter(lead => lead.clientName ?\n                lead.prefix.concat('-',lead.seller,'-',lead.number).includes(arrayFilter.toUpperCase()) || \n                lead.clientName.bussinessName.toLowerCase().includes(arrayFilter.toLowerCase()) : [] ).map((lead, k) => {\n                return (\n                //el 5 se reemplaza por el número de filas en la tabla para la paginación\n                (k < ((page * 5) + 5) && k >= (page * 5)) ? \n                <TableRow key={k}>\n                    {/* Detalle */}\n                    <TableCell>{`${lead.prefix}-${lead.seller}-${lead.number}`}</TableCell>\n                    <TableCell>\n                        {lead.clientName ? lead.clientName.bussinessName : null}\n                    </TableCell>\n                    <TableCell>\n                        {lead.status}\n                    </TableCell>\n                    {/* Fecha y hora de reunión */}\n                    <Tooltip disableFocusListener title={moment(lead.meetingDate).format(\"d/MMMM/Y h:m a\")} placement=\"right\">\n                        <TableCell> \n                            {moment(lead.meetingDate).fromNow()}\n                        </TableCell>\n                    </Tooltip>\n                </TableRow> : ''\n                );\n            }) : <TableRow>\n                    <TableCell style={{width:\"200px\", padding: \"5px\"}} component=\"th\" scope=\"row\">\n                       {loading ? 'Cargando...' : 'No hay leads'}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\">\n                        {loading ? <CircularProgress color=\"secondary\" style={{margin:\"1em\"}}/> : ''}\n                    </TableCell>\n                </TableRow>}\n            </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[5]}\n          component=\"Table\"\n          count={leads ? leads.length : 0}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n              'aria-label': 'Previous Page',\n            }}\n            nextIconButtonProps={{\n                'aria-label': 'Next Page',\n            }}\n            onChangePage={handleChangePage}\n            />\n    </div>\n  )\n}\n\nexport default LeadsTable\n","import React from 'react'\nimport ReactChartkick, { PieChart } from 'react-chartkick'\nimport Chart from 'chart.js'\nReactChartkick.addAdapter(Chart)\n\nconst DashboardPieChart = ({propuesta, negociacion, confirmacion, perdida, ganada}) => {\n  return (\n    <div>\n      <PieChart \n        data={[[\"Propuesta\", propuesta], [\"Negociación\", negociacion], [\"Confirmación de pedido (Ganada)\", confirmacion], [\"Perdida\", perdida], [\"Primer cobro\", ganada]]} \n        messages={{empty: \"No hay datos\"}}\n      />\n    </div>\n  )\n}\n\nexport default DashboardPieChart\n","import React from 'react'\nimport './styles.css'\nimport { Paper } from '@material-ui/core';\nimport LeadsTable from './LeadsTable';\nimport DashboardPieChart from '../charts/DashboardPieChart';\n\nconst Summary = ({leads, page, rowsPerPage, handleChangePage, loading, orderById, summaryData}) => {\n\n  return (\n    <div className=\"cards\">\n      <Paper className=\"card\">\n        <h4>Leads</h4>\n        <LeadsTable \n            leads={leads}\n            loading={loading}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            handleChangePage={handleChangePage}\n            orderById={orderById}\n        />\n      </Paper>\n      <Paper className=\"card\">\n        <h4>General</h4>\n        <div className=\"general-info\">\n        <DashboardPieChart {...summaryData} />\n        </div>\n      </Paper>\n    </div>\n  )\n}\nexport default Summary","import axios from 'axios'\n\n// const url = 'http://localhost:3000/general'\nconst url = 'https://crm-fss.herokuapp.com/general'\n\nexport const getSellers = () => \n    axios.get(`${url}/getSellers`)\n        .then(res => res)\n        .catch(err => err)","import React from 'react'\nimport './styles.css'\nimport { Paper, List, ListItem, Avatar, ListItemText } from '@material-ui/core';\n\nconst Employees = ({sellers}) => {\n  return (\n    <div className=\"cards employees-resume\">\n       <Paper className=\"card\">\n            <h4>Vendedores</h4>\n            <List className=\"employees-detail\">\n            {sellers ? sellers.map((seller,k) => \n                <ListItem key={k}>\n                    <Avatar alt=\"profile-mini-pic\" src={seller.photoURL}/>\n                    <ListItemText \n                        primary={seller.name}\n                        secondary={`Leads:${seller.leads.length} , Cotizaciones: ${seller.leads.length ? seller.leads.reduce((acc,lead)=> acc + lead.quotations.length, 0) : 0}`} \n                    />\n                </ListItem>) : <div className=\"employees-detail\">No hay vendedores</div>}\n        </List>\n        </Paper>\n    </div>\n  )\n}\n\nexport default Employees\n","import React, { Component } from 'react'\nimport Summary from './Summary';\nimport './styles.css'\nimport { getAll } from '../../services/leadsDB'\nimport { getSellers } from '../../services/generalConsults'\nimport Employees from './Employees';\nimport { Divider } from '@material-ui/core';\n\nexport default class Dashboard extends Component {\n    \n    state = {\n        user: {},\n        loading: true,\n        leads: [],\n        page: 0,\n        rowsPerPage: 5,\n        summaryData: {},\n        sellers: []\n    }\n    \n    componentDidMount = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) return this.props.history.push('/login')\n        this.setState({user}, () => {this.getLeads(); this.getEmployees()})\n    }\n\n    componentWillUnmount = () => this.setState({loading: true})\n\n    getSummaryData = () => {\n        const { leads } = this.state\n        let summaryData = {\n            propuesta: leads.reduce((acc,lead) => {if(lead.status === 'Propuesta') acc ++; return acc},0),\n            negociacion: leads.reduce((acc,lead) => {if(lead.status === 'Negociación') acc ++; return acc},0),\n            confirmacion: leads.reduce((acc,lead) => {if(lead.status === 'Confirmación de pedido') acc ++; return acc},0),\n            perdida: leads.reduce((acc,lead) => {if(lead.status === 'Perdida') acc ++; return acc},0),\n            ganada: leads.reduce((acc,lead) => {if(lead.status === 'Primer Cobro') acc ++; return acc},0),\n        }\n        this.setState({summaryData})\n    }\n\n    getLeads = () => {\n        const { user } = this.state\n        getAll(user._id)\n            .then(userLeads => this.setState({leads: userLeads.data.leads.reverse(), loading: false}, this.getSummaryData))\n            .catch(err => console.log(err))\n    }\n\n    getEmployees = () => {\n        getSellers()\n            .then(sellers => this.setState({sellers: sellers.data}))\n            .catch(err => console.log(err))\n    }\n\n    handleChangePage = (event, page) => this.setState({ page })\n\n    orderById = () => {\n        let { leads } = this.state\n        leads = leads.reverse()\n        this.setState({leads})\n    }\n\n  render() {\n      const { loading, leads, page, rowsPerPage, summaryData, sellers } = this.state\n      const { handleChangePage, orderById} = this\n    return (\n        <div className=\"dashboard-layout\">\n            <Summary \n                leads={leads}\n                loading={loading}\n                page={page}\n                rowsPerPage={rowsPerPage}\n                handleChangePage={handleChangePage}\n                orderById={orderById}\n                summaryData={summaryData}\n            />\n            <Divider style={{marginTop:\"1rem\"}}/>\n            <small>Administración</small>\n            <Employees \n                sellers={sellers}\n            />\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { CssBaseline} from '@material-ui/core';\nimport { styles } from './styles'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport HomeNav from './HomeNav';\nimport HomeDrawer from './HomeDrawer';\nimport Profile from '../profile/Profile';\nimport Sales from '../sales/Sales';\nimport { actUser, logout } from '../../services/auth'\nimport Dashboard from '../dashboard/Dashboard';\n\nclass Home extends Component {\n    state = {\n        open: false,\n        direction: 'left',\n        location: 'root',\n        user: {},\n        message: String,\n    }\n\n    componentDidMount = () => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (!user) return this.props.history.push('/login')\n        this.setState({user})\n    }\n\n    handleDrawerOpen = () => this.setState({ open: true, direction: 'left' })\n\n    handleDrawerClose = () => this.setState({ open: false, direction: 'right' })\n\n    handleLocation = e => this.setState({location : e})\n\n    toHome = () => this.setState({location: 'root'})\n\n    updateUser = user => { \n        actUser(user._id, user)\n        this.setState({user})\n    }\n\n    closeSession = () => \n      logout()\n      .then(res => {\n          const { history } = this.props\n          localStorage.removeItem('user')\n          return history.push('/login')\n      })\n      .catch(err => err)\n\n    close = () => this.setState({open: false})\n\n  render() {\n    const { open, direction, location, user } = this.state\n    const { handleDrawerClose, handleDrawerOpen, handleLocation, \n            updateUser, toHome, closeSession } = this\n    const { classes } = this.props\n    return (\n      <div>\n        <div className=\"root\">\n        <CssBaseline />\n        <HomeNav \n            handleDrawerOpen={handleDrawerOpen} \n            toHome={toHome}\n            open={open} \n            classes={classes}\n            closeSession={closeSession}\n            handleLocation={handleLocation}\n            {...user}/>\n        <HomeDrawer \n            handleDrawerClose={handleDrawerClose} \n            location={location}\n            open={open} \n            direction={direction} \n            classes={classes}\n            handleLocation={handleLocation} />\n\n        <main onClick={handleDrawerClose} className={classes.content}>\n          <div className={classes.toolbar}/>\n          {\n              location === 'root' ? <Dashboard /> :\n              location === 'ventas' ? <Sales /> :\n              location === 'profile' ? <Profile updateUser={updateUser} /> :\n              'Not root'\n          }\n        </main>\n      </div>\n      </div>\n    )\n  }\n}\n\nHome.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n  }\n\nexport default withStyles(styles, {withTheme: true})(Home)","import React from 'react'\nimport './navbar.css'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <AppBar position=\"static\">\n        <Toolbar className=\"grow\">\n            <Link to=\"/login\"><img style={{width:\"100px\", cursor:\"pointer\"}} src=\"/logo.png\" alt=\"fss-logo\"/></Link>\n            <Button color=\"inherit\"><Link style={{color:\"white\"}} to=\"/login\">Iniciar sesión</Link></Button>\n        </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar","import React, { Component } from 'react'\nimport { Paper, TextField, Button, InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport '../signup/signup.css'\nimport { login } from '../../services/auth'\nimport Snack from '../snackbar/Snack';\nimport Navbar from '../navbar/Navbar'\nimport { Link } from 'react-router-dom'\n\nexport default class Login extends Component {\n  state = {\n    user: {},\n    message: String,\n    open: false,\n    showPassword : false\n  }\n\n  componentDidMount = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) return this.setState({ user: {}, isAuth: false });\n    this.props.history.push('/home')\n  }\n\n  handleChange = e => {\n    const { user } = this.state\n    user[e.target.id] = e.target.value\n    this.setState({user})\n  }\n\n  handleSubmit = () => {\n    const { user } = this.state\n    login(user)\n    .then(res => {\n      if(res.status === 500) return this.setState({open: true, message: res.data.message})\n      if(res.status === 404) return this.setState({open: true, message: 'Nombre de usuario o contraseña incorrectos'})\n      localStorage.setItem('user', JSON.stringify(res))\n      this.setState({open: true, message: \"Inicio de sesión correcto, ¡Bienvenido(a)!\"})\n      this.props.history.push('/home')\n    })\n    .catch(err => this.setState({open: true, message: err}))\n  }\n\n  close = () => this.setState({open: false})\n\n  togglePassword = () => this.setState({showPassword: !this.state.showPassword})\n\n  render() {\n    const { user, message, open, showPassword } = this.state\n    const { handleChange, handleSubmit, close, togglePassword } = this\n    return (\n      <div>\n        <Navbar/>\n        <div className=\"landing-image\"/>\n        <Paper className=\"paper-signup\">\n          <h2>Ingresa a tu cuenta</h2>\n          <img style={{filter:\"invert(100%)\", width: '200px'}} src=\"/logo.png\" alt=\"fss-logo\"/>\n          <form>\n            <div>\n              <TextField\n              id=\"email\"\n              label=\"Email\"\n              value={user.email}\n              onChange={handleChange}\n              margin=\"normal\"\n              />\n            </div>\n            <div>\n              <TextField\n              id=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              label=\"Contraseña\"\n              value={user.password}\n              onChange={handleChange}\n              margin=\"normal\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton aria-label=\"Toggle password visibility\" onClick={togglePassword}>\n                      {showPassword ? <VisibilityOff /> : <Visibility />} \n                    </IconButton>\n                  </InputAdornment> \n                )\n              }}\n              />\n            </div>\n            <Button onClick={handleSubmit} style={{margin:\"1rem 0\"}} variant=\"contained\" color=\"primary\">\n              Iniciar sesión\n            </Button>\n          </form>\n          <small>¿No tienes una cuenta? <Link to=\"/signup\">Crea una aquí</Link></small>\n        </Paper>\n        <Snack close={close} message={message} open={open}/>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Paper, TextField, Button, InputAdornment, IconButton } from '@material-ui/core';\nimport './signup.css'\nimport { signup } from '../../services/auth'\nimport Snack from '../snackbar/Snack';\nimport Navbar from '../navbar/Navbar';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Link } from 'react-router-dom'\n\nexport default class Signup extends Component {\n  state = {\n    user: {},\n    message: String,\n    open: false,\n    error: false,\n    errorPass: false,\n    disabledMail: true,\n    disabledPass: true,\n    showPassword : false\n  }\n\n  componentDidMount = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) return this.setState({ user: {}, isAuth: false });\n    this.props.history.push('/app')\n  }\n  \n  handleChange = e => {\n    const { user } = this.state\n    user[e.target.id] = e.target.value\n    this.setState({user})\n  }\n\n  handleSubmit = () => {\n    const pass = document.getElementById('password')\n    if(pass.value.length < 6) \n      return this.setState({disabledPass: true, open: true, message: 'La contraseña debe tener al menos 6 caracteres'})\n\n    const { user } = this.state\n    signup(user)\n    .then(res => {\n      if(res.status === 500) return this.setState({open: true, message: 'Ya existe un usuario con este correo'})\n      localStorage.setItem('user', JSON.stringify(res))\n      this.setState({open: true, message: \"Registro correcto, ¡Bienvenido(a)!\"})\n      this.props.history.push('/home')\n    })\n    .catch(err => this.setState({open: true, message: err}))\n  }\n\n  close = () => this.setState({open: false})\n\n  checkPassword = input => event => {\n    const { user } = this.state\n    if(user.password === event.target.value) return this.setState({disabledPass: false, errorPass: false})\n    this.setState({ disabledPass: true, errorPass: true})\n    return false\n  }\n\n  checkEmail = input => event => {\n      const emailRegEx = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      if(emailRegEx.test(String(event.target.value).toLowerCase())) return this.setState({disabledMail: false, error: false})\n      this.setState({disabledMail: true, error: true})\n  }\n\n  togglePassword = () => this.setState({showPassword: !this.state.showPassword})\n\n  render() {\n    const { user, message, open, error, disabledMail, disabledPass, errorPass, showPassword } = this.state\n    const { handleChange, handleSubmit, close, checkEmail, checkPassword, togglePassword } = this\n    return (\n      <div>\n        <Navbar/>\n        <div className=\"landing-image\"/>\n        <Paper className=\"paper-signup\">\n          <h2>Registro de usuario</h2>\n          <img style={{filter:\"invert(100%)\", width: '200px'}} src=\"/logo.png\" alt=\"fss-logo\"/>\n          <form>\n            <div>\n              <TextField\n              id=\"name\"\n              label=\"Nombre\"\n              value={user.name}\n              onChange={handleChange}\n              margin=\"normal\"\n              />\n            </div>\n            <div>\n              <TextField\n              id=\"email\"\n              label=\"Email\"\n              value={user.email}\n              onChange={handleChange}\n              onBlur={checkEmail()}\n              margin=\"normal\"\n              />\n            </div>\n            <div>\n              {error ? <small style={{color:\"red\"}}>Ingresa un correo válido</small> : ''}\n            </div>\n            <div>\n              <TextField\n              id=\"password\"\n              type={showPassword ? 'text' : 'password'}\n              label=\"Contraseña\"\n              value={user.password}\n              onChange={handleChange}\n              margin=\"normal\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton aria-label=\"Toggle password visibility\" onClick={togglePassword}>\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment> \n                )\n              }}\n              /> <br/>\n              <small style={{fontSize:\"0.7rem\", color:\"rgb(0, 82, 136)\", marginTop:\"-5px;\"}}>Mínimo 6 caracteres</small>\n            </div>\n            <div>\n              <TextField\n              id=\"repeat-password\"\n              label=\"Repite tu contraseña\"\n              type={showPassword ? 'text' : 'password'}\n              onChange={checkPassword()}\n              onBlur={checkPassword()}\n              margin=\"normal\"\n              />\n            </div>\n            <div>\n              {errorPass ? <small style={{color:\"red\"}}>La contraseña no coincide</small> : ''}\n            </div>\n            <Button disabled={disabledMail || disabledPass} onClick={handleSubmit} style={{margin:\"1rem 0\"}} variant=\"contained\" color=\"primary\">\n              Registrarme\n            </Button>\n          </form>\n          <small>¿Ya tienes una cuenta? <Link to=\"login\">Inicia sesión</Link></small>\n        </Paper>\n        <Snack close={close} message={message} open={open}/>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './components/home/Home';\nimport Login from './components/login/Login';\nimport Signup from './components/signup/Signup';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login}/>\n      <Route path=\"/login\" component={Login}/>\n      <Route path=\"/home\" component={Home}/>\n      <Route path=\"/signup\" component={Signup}/>\n    </Switch>\n    )\n\n}\n\nexport default Routes\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {main: '#1976d2'},\n    secondary: {main: '#c62828'}\n  }\n});","import React, { Component } from 'react'\nimport './App.css'\nimport Routes from './Routes'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport { theme } from './theme'\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Routes/>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nconst WithRouter = () => <BrowserRouter><App/></BrowserRouter>\nReactDOM.render(<WithRouter/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}